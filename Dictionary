Q1. Write a Python program that asks the user to enter a text and return him a dictionary whose keys are the words of the text entered and the values are the reverse of the words that make up the text. ExWrite a Python program that asks the user to enter a text and return him a dictionary whose keys are the words of the text entered and the values are the reverse of the words that make up the text.

Code:
T = input("Type a some text")
listWords = T.split(' ')
d= dict({})
for word in listWords:
    reverseWord = word[::-1]
    d[word] = reverseWord
print("The obtained dictionary is d = " , d)

Q2. Given a dictionary d whose key values are lists. Write a Python program that transforms the dictionary d by sorting the lists.

Code:
d = {'a1': [21, 17, 22, 3], 'a2': [11, 15, 8, 13], 'a3': [7, 13, 2, 11], 'a4': [22,14,7,9]}
for key , value in d.items():
    value.sort()
    d[key] = value
print("The new dictionary is d = " , d)

Q3. We consider the Pythons dictionary which contains a personal data :
personalData = {'Name' : 'David' , 'Email' : 'david@gmail.com' , 'Phone' : 33354587 , age' : 27 }
Write a Python program that save data contained in personalData into a file called data.txt . 

Code:
personalData = {'Name' : 'David' , 'Email' : 'david@gmail.com' , 'Phone' : 33354587 , 'age' : 27 }
file = open("data.txt" , 'w')
for key , value in personalData.items() :
    file.write(key + " : " + str(personalData[key]) + '\n')
file.close()

Q4.Write a program in Python that asks the user to enter a string, and return him a dictionary whose keys are the characters in the string entered and the values are the number of occurrences of the characters in the string.

Code:
s = input ("Enter some string s : ")
d = dict ({})
for x in s:
    d [x] = s.count(x)
print (d)

Q5. Write a function in Python that takes a list of integers as a parameter and returns a dictionary whose keys are the list integers and whose values are "even" or "odd" depending on the number parity. 

Code:
dictParity = dict()
    for x in l:
        if x%2 == 0:
            dictParity[x] = 'Pair'
        else:
            dictParity[x] = 'Impair'
    print(dictParity)
    
 Q6. We cosider the following dictionary of length N containing the students names as keys and their score lists as key values:
d = {'student1': listNote1, 'students2': listNotes2, ..., 'studentN': listNoteN}
Write a Python program that transforms this dictionary by replacing the score lists with their averages.

Code:
def meanList (L):
  mean = 0 
  n = len (L)
  for x in L: 
    mean = x + mean 
    mean = mean/n 
  return mean
d = {'student1': [14, 16, 18], 'students2': [12, 15, 17], 'student3': [16, 16, 13]} 
d [key] = meanList(d [key])
print ("The new dictionary is d =", d) 

Q7. We consider the three Pythons dictionaries which includes all the computer hardwares:
dicPC = {"HP": 11, "Acer": 7, "Lenovo": 17, "Del": 23}
dicPhone = {"Sumsung": 22, "Iphone": 9, "Other": 13}
dicTablet = {"Sumsung": 15, "Other": 13}
Write a Python program that combines by concatenating these three dictionaries into one. 

Code:
dicPC = {"HP": 11, "Acer": 7, "Lenovo": 17, "Del": 23}
dicPhone = {"Sumsung": 22, "Iphone": 9, "Other": 13}
dicTablet = {"Sumsung": 15, "Other": 13}
dicTotal = {}
for d in [dicPC, dicTablet, dicPhone]:
     dicTotal.update (d)
print (dicTotal)

Q8. We consider the following dictionary whose keys are the names of the students and the key values are the general averages obtained by passing the final exam:

students = {"student_1" : 13 , "student_2" : 17 , "student_3" : 9 , "student_4" : 15 , 
			 "student_5" : 8 , "student_6" : 14 , "student_7" : 16 , "student_8" : 12 , 
			 "student_9" : 13 , "student_10" : 15 , "student_11" : 14 , "student_112" : 9 , 
			 "student_13" : 10 , "student_14" : 12 , "student_15" : 13 , "student_16" : 7 ,
			 "student_17" : 12 , "student_18" : 15 , "student_19" : 9 , "student_20" : 17 ,}

Write a Python program that partitions this dictionary into two sub-dictionaries:

    admittedStudents whose keys are the admitted students and the key values are the averages obtained (average greater than or equal to 10).
    nonAdmittedStudents whose keys are non-admitted students and the key values are the averages obtained (average less than or equal to 10).
    
    
    Code:
    students = {"student_1" : 13 , "student_2" : 17 , "student_3" : 9 , "student_4" : 15 , 
            "student_5" : 8 , "student_6" : 14 , "student_7" : 16 , "student_8" : 12 , 
            "student_9" : 13 , "student_10" : 15 , "student_11" : 14 , "student_112" : 9 , 
            "student_13" : 10 , "student_14" : 12 , "student_15" : 13 , "student_16" : 7 ,
            "student_17" : 12 , "student_18" : 15 , "student_19" : 9 , "student_20" : 17 ,}
admittedStudents = dict ({})
nonAdmittedStudent = dict ({})
for key, value in students.items ():
    if (value <10):
        nonAdmittedStudent[key] = value
    else:
        admittedStudents[key] = value
print ("Admitted students:", admittedStudents)
print ("Students not admitted:", nonAdmittedStudent)

Q9. Write a Python program that creates from a keyboard-typed integer n, a dictionary whose keys are integers from 1 to n and key values are their squares.

Code:
n = int (input ("Enter the value of n"))
d = dict ({})
for i in range (1, n + 1):
     d [i] = i * i
print (d)

Q10.  Write a program in Python that asks the user to enter ten integers of their choice and return them a dictionary whose keys are the entered integers and whose values are 'prime' or 'not prime' depending on the entered integer. 

Code:
def isPrim(n):
    numberDivisors = 0
    for i in range(1 , n + 1):
        if ( n%i == 0 ):
            numberDivisors = numberDivisors + 1
    if (numberDivisors == 2 ):
        return True
    else:
        return False
d = dict({})
for i in range(0 , 10):
    n = int(input("Type an integer : " ))
    if (isPrim(n)):
        d[n] = "prime"
    else:
        d[n] = "not prime"
print(d)
